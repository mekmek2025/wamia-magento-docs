import fs from "fs"; import path from "path"; import matter from "gray-matter"; import { remark } from "remark"; import html from "remark-html"; import gfm from "remark-gfm"; const docsDirectory = path.join(process.cwd(), "docs"); export function getAllDocPaths() { function getFiles(dir, basePath = "") { const files = []; const items = fs.readdirSync(dir); for (const item of items) { if (item.startsWith("_")) continue; const fullPath = path.join(dir, item); const stat = fs.statSync(fullPath); if (stat.isDirectory()) { files.push(...getFiles(fullPath, path.join(basePath, item))); } else if (item.endsWith(".md")) { const slug = path.join(basePath, item.replace(/\.md$/, "")); files.push({ params: { slug: slug.split(path.sep) } }); } } return files; } return getFiles(docsDirectory); } export async function getDocData(slug) { const fullPath = path.join(docsDirectory, ...slug) + ".md"; const fileContents = fs.readFileSync(fullPath, "utf8"); const matterResult = matter(fileContents); const processedContent = await remark() .use(gfm) .use(html, { sanitize: false }) .process(matterResult.content); const contentHtml = processedContent.toString(); return { slug, contentHtml, ...matterResult.data, }; } export function getDocStructure() { function buildStructure(dir, basePath = "") { const structure = {}; const items = fs.readdirSync(dir); for (const item of items) { if (item.startsWith("_")) continue; const fullPath = path.join(dir, item); const stat = fs.statSync(fullPath); if (stat.isDirectory()) { structure[item] = buildStructure(fullPath, path.join(basePath, item)); } else if (item.endsWith(".md")) { const name = item.replace(/\.md$/, ""); structure[name] = path.join(basePath, name); } } return structure; } return buildStructure(docsDirectory); }
